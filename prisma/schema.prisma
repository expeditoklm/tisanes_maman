generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  userId     String   @id @default(cuid())
  userName   String   @db.VarChar(65)
  email      String   @unique @db.VarChar(255)
  password   String   @db.VarChar(255)
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  @@map("users")
}

model Category {
  id        String    @id @default(cuid())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deleted   Boolean   @default(false)
  diseases  Disease[]

  @@map("categories")
}

model Remedy {
  id           String             @id @default(cuid())
  name         String
  description  String?
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @updatedAt
  deleted      Boolean            @default(false)
  value        Int
  instructions Instruction[]
  diseases     RemedyDisease[]
  ingredients  RemedyIngredient[]

  @@map("remedies")
}

model Photo {
  id           String     @id @default(cuid())
  url          String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  deleted      Boolean    @default(false)
  ingredientId String
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])

  @@index([ingredientId], map: "photos_ingredientId_fkey")
  @@map("photos")
}

model Instruction {
  id         String   @id @default(cuid())
  stepNumber Int
  text       String
  remedyId   String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  deleted    Boolean  @default(false)
  remedy     Remedy   @relation(fields: [remedyId], references: [id])

  @@index([remedyId], map: "instructions_remedyId_fkey")
  @@map("instructions")
}

model Ingredient {
  id          String             @id @default(cuid())
  name        String
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
  deleted     Boolean            @default(false)
  description String?
  photos      Photo[]
  remedies    RemedyIngredient[]

  @@map("ingredients")
}

model Disease {
  id          String          @id @default(cuid())
  name        String
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  deleted     Boolean         @default(false)
  description String?
  categoryId  String?
  category    Category?       @relation(fields: [categoryId], references: [id])
  remedies    RemedyDisease[]

  @@index([categoryId], map: "diseases_categoryId_fkey")
  @@map("diseases")
}

model RemedyIngredient {
  remedyId     String
  ingredientId String
  quantity     String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  deleted      Boolean    @default(false)
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  remedy       Remedy     @relation(fields: [remedyId], references: [id])

  @@id([remedyId, ingredientId])
  @@index([ingredientId], map: "remedy_ingredients_ingredientId_fkey")
  @@map("remedy_ingredients")
}

model RemedyDisease {
  remedyId  String
  diseaseId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deleted   Boolean  @default(false)
  disease   Disease  @relation(fields: [diseaseId], references: [id])
  remedy    Remedy   @relation(fields: [remedyId], references: [id])

  @@id([remedyId, diseaseId])
  @@index([diseaseId], map: "remedy_diseases_diseaseId_fkey")
  @@map("remedy_diseases")
}
